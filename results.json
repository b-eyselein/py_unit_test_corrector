[
  {
    "testConfig": {
      "test_id": 0,
      "should_fail": false,
      "cause": null
    },
    "successful": true,
    "file": "/data/ggt",
    "status": 0,
    "stdout": [
      ""
    ],
    "stderr": [
      ".",
      "----------------------------------------------------------------------",
      "Ran 1 test in 0.000s",
      "",
      "OK",
      ""
    ]
  },
  {
    "testConfig": {
      "test_id": 1,
      "should_fail": true,
      "cause": "wrong_datatype"
    },
    "successful": false,
    "file": "/data/ggt",
    "status": 0,
    "stdout": [
      ""
    ],
    "stderr": [
      ".",
      "----------------------------------------------------------------------",
      "Ran 1 test in 0.000s",
      "",
      "OK",
      ""
    ]
  },
  {
    "testConfig": {
      "test_id": 2,
      "should_fail": true,
      "cause": "wrong_datatype"
    },
    "successful": false,
    "file": "/data/ggt",
    "status": 0,
    "stdout": [
      ""
    ],
    "stderr": [
      ".",
      "----------------------------------------------------------------------",
      "Ran 1 test in 0.000s",
      "",
      "OK",
      ""
    ]
  },
  {
    "testConfig": {
      "test_id": 3,
      "should_fail": true,
      "cause": "illegal_argument"
    },
    "successful": true,
    "file": "/data/ggt",
    "status": 1,
    "stdout": [
      ""
    ],
    "stderr": [
      "F",
      "======================================================================",
      "FAIL: test_ggt (__main__.GgtTest)",
      "----------------------------------------------------------------------",
      "Traceback (most recent call last):",
      "  File \"ggt_test_copy.py\", line 21, in test_ggt",
      "    ggt(-1, 1)",
      "AssertionError: Exception not raised",
      "",
      "----------------------------------------------------------------------",
      "Ran 1 test in 0.001s",
      "",
      "FAILED (failures=1)",
      ""
    ]
  },
  {
    "testConfig": {
      "test_id": 4,
      "should_fail": true,
      "cause": "illegal_argument"
    },
    "successful": true,
    "file": "/data/ggt",
    "status": 1,
    "stdout": [
      ""
    ],
    "stderr": [
      "F",
      "======================================================================",
      "FAIL: test_ggt (__main__.GgtTest)",
      "----------------------------------------------------------------------",
      "Traceback (most recent call last):",
      "  File \"ggt_test_copy.py\", line 24, in test_ggt",
      "    ggt(1, -1)",
      "AssertionError: Exception not raised",
      "",
      "----------------------------------------------------------------------",
      "Ran 1 test in 0.001s",
      "",
      "FAILED (failures=1)",
      ""
    ]
  },
  {
    "testConfig": {
      "test_id": 5,
      "should_fail": true,
      "cause": "wrong_result"
    },
    "successful": true,
    "file": "/data/ggt",
    "status": 1,
    "stdout": [
      ""
    ],
    "stderr": [
      "F",
      "======================================================================",
      "FAIL: test_ggt (__main__.GgtTest)",
      "----------------------------------------------------------------------",
      "Traceback (most recent call last):",
      "  File \"ggt_test_copy.py\", line 9, in test_ggt",
      "    self.assertEqual(1, ggt(2, 3))",
      "AssertionError: 1 != 2",
      "",
      "----------------------------------------------------------------------",
      "Ran 1 test in 0.001s",
      "",
      "FAILED (failures=1)",
      ""
    ]
  },
  {
    "testConfig": {
      "test_id": 6,
      "should_fail": true,
      "cause": "wrong_result"
    },
    "successful": true,
    "file": "/data/ggt",
    "status": 1,
    "stdout": [
      ""
    ],
    "stderr": [
      "F",
      "======================================================================",
      "FAIL: test_ggt (__main__.GgtTest)",
      "----------------------------------------------------------------------",
      "Traceback (most recent call last):",
      "  File \"ggt_test_copy.py\", line 9, in test_ggt",
      "    self.assertEqual(1, ggt(2, 3))",
      "AssertionError: 1 != 3",
      "",
      "----------------------------------------------------------------------",
      "Ran 1 test in 0.001s",
      "",
      "FAILED (failures=1)",
      ""
    ]
  },
  {
    "testConfig": {
      "test_id": 7,
      "should_fail": true,
      "cause": "wrong_result"
    },
    "successful": true,
    "file": "/data/ggt",
    "status": 1,
    "stdout": [
      ""
    ],
    "stderr": [
      "F",
      "======================================================================",
      "FAIL: test_ggt (__main__.GgtTest)",
      "----------------------------------------------------------------------",
      "Traceback (most recent call last):",
      "  File \"ggt_test_copy.py\", line 9, in test_ggt",
      "    self.assertEqual(1, ggt(2, 3))",
      "AssertionError: 1 != 2",
      "",
      "----------------------------------------------------------------------",
      "Ran 1 test in 0.001s",
      "",
      "FAILED (failures=1)",
      ""
    ]
  },
  {
    "testConfig": {
      "test_id": 8,
      "should_fail": true,
      "cause": "endless_loop"
    },
    "successful": true,
    "file": "/data/ggt",
    "status": -15,
    "stdout": [
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2",
      "2 2 2"
    ],
    "stderr": [
      ""
    ]
  }
]